{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Intern\\\\sensors1\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Graph from \"./components/Graph\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [poseLabel, setPoseLabel] = useState(0);\n  const [rowIndex, setRowIndex] = useState(0);\n  const readCSV = () => {\n    Papa.parse(\"/path-to-your-file.csv\", {\n      download: true,\n      complete: result => {\n        setData(result.data);\n      }\n    });\n  };\n  useEffect(() => {\n    readCSV();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (rowIndex + 9 < data.length) {\n        const subset = data.slice(rowIndex, rowIndex + 10);\n        setPoseLabel(subset[9][52]); // Update pose label from the last column\n        setRowIndex(rowIndex + 10);\n      } else {\n        setRowIndex(0); // Reset to the beginning when done\n      }\n    }, 5000); // Update every 5 seconds (or customize based on needs)\n\n    return () => clearInterval(interval);\n  }, [rowIndex, data]);\n  const currentData = data.slice(rowIndex, rowIndex + 10);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Sensorless Sensing with Yoga Pose Detection\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Graph of Amplitude Values (10 rows)\"), /*#__PURE__*/React.createElement(Graph, {\n    data: currentData.map(row => row.slice(0, 52)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Yoga Pose: \", [\"Sit\", \"Forward Bend\", \"Warrior Pose\", \"Triangle Pose\", \"Vajrasan\", \"Backward Bend\"][poseLabel]), /*#__PURE__*/React.createElement(VideoPlayer, {\n    poseLabel: poseLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","Papa","Graph","VideoPlayer","App","data","setData","poseLabel","setPoseLabel","rowIndex","setRowIndex","readCSV","parse","download","complete","result","interval","setInterval","length","subset","slice","clearInterval","currentData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","row"],"sources":["C:/Users/Admin/OneDrive/Desktop/Intern/sensors1/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Graph from \"./components/Graph\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [poseLabel, setPoseLabel] = useState(0);\n  const [rowIndex, setRowIndex] = useState(0);\n\n  const readCSV = () => {\n    Papa.parse(\"/path-to-your-file.csv\", {\n      download: true,\n      complete: (result) => {\n        setData(result.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    readCSV();\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (rowIndex + 9 < data.length) {\n        const subset = data.slice(rowIndex, rowIndex + 10);\n        setPoseLabel(subset[9][52]); // Update pose label from the last column\n        setRowIndex(rowIndex + 10);\n      } else {\n        setRowIndex(0); // Reset to the beginning when done\n      }\n    }, 5000); // Update every 5 seconds (or customize based on needs)\n    \n    return () => clearInterval(interval);\n  }, [rowIndex, data]);\n\n  const currentData = data.slice(rowIndex, rowIndex + 10);\n\n  return (\n    <div className=\"App\">\n      <h1>Sensorless Sensing with Yoga Pose Detection</h1>\n\n      <div className=\"graph\">\n        <h2>Graph of Amplitude Values (10 rows)</h2>\n        <Graph data={currentData.map(row => row.slice(0, 52))} />\n      </div>\n\n      <div className=\"video-player\">\n        <h2>Yoga Pose: {[\"Sit\", \"Forward Bend\", \"Warrior Pose\", \"Triangle Pose\", \"Vajrasan\", \"Backward Bend\"][poseLabel]}</h2>\n        <VideoPlayer poseLabel={poseLabel} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}