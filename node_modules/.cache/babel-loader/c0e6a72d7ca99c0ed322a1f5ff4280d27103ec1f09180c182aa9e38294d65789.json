{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Intern\\\\sensors1\\\\src\\\\components\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  data\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    const width = canvasRef.current.width;\n    const height = canvasRef.current.height;\n\n    // Clear the canvas before drawing\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n\n    // Draw the graph for 52 columns of data and 10 rows\n    data.forEach((row, index) => {\n      row.forEach((value, column) => {\n        const x = column * 10;\n        const y = height / 2 - value * 10; // Scale the amplitude values\n        ctx.lineTo(x, y);\n      });\n    });\n    ctx.stroke();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 520,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(Graph, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Graph","data","_s","canvasRef","ctx","current","getContext","width","height","clearRect","beginPath","forEach","row","index","value","column","x","y","lineTo","stroke","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/Intern/sensors1/src/components/VideoPlayer.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nconst Graph = ({ data }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    const width = canvasRef.current.width;\r\n    const height = canvasRef.current.height;\r\n\r\n    // Clear the canvas before drawing\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.beginPath();\r\n\r\n    // Draw the graph for 52 columns of data and 10 rows\r\n    data.forEach((row, index) => {\r\n      row.forEach((value, column) => {\r\n        const x = column * 10;\r\n        const y = (height / 2) - (value * 10); // Scale the amplitude values\r\n        ctx.lineTo(x, y);\r\n      });\r\n    });\r\n\r\n    ctx.stroke();\r\n  }, [data]);\r\n\r\n  return <canvas ref={canvasRef} width={520} height={400} />;\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMQ,GAAG,GAAGD,SAAS,CAACE,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAC9C,MAAMC,KAAK,GAAGJ,SAAS,CAACE,OAAO,CAACE,KAAK;IACrC,MAAMC,MAAM,GAAGL,SAAS,CAACE,OAAO,CAACG,MAAM;;IAEvC;IACAJ,GAAG,CAACK,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,KAAK,EAAEC,MAAM,CAAC;IAClCJ,GAAG,CAACM,SAAS,CAAC,CAAC;;IAEf;IACAT,IAAI,CAACU,OAAO,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC3BD,GAAG,CAACD,OAAO,CAAC,CAACG,KAAK,EAAEC,MAAM,KAAK;QAC7B,MAAMC,CAAC,GAAGD,MAAM,GAAG,EAAE;QACrB,MAAME,CAAC,GAAIT,MAAM,GAAG,CAAC,GAAKM,KAAK,GAAG,EAAG,CAAC,CAAC;QACvCV,GAAG,CAACc,MAAM,CAACF,CAAC,EAAEC,CAAC,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFb,GAAG,CAACe,MAAM,CAAC,CAAC;EACd,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAQqB,GAAG,EAAEjB,SAAU;IAACI,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE;EAAI;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D,CAAC;AAACtB,EAAA,CAzBIF,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}