{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Intern\\\\sensors1\\\\src\\\\graph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\"; // Automatically imports the required chart components\n\nconst graph = () => {\n  const [data, setData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    if (data.length > 0) {\n      const interval = setInterval(() => {\n        updateChart(currentIndex);\n        setCurrentIndex(prevIndex => (prevIndex + 50) % data.length);\n      }, 1000); // Change every second\n      return () => clearInterval(interval);\n    }\n  }, [data, currentIndex]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        complete: result => {\n          const parsedData = result.data.slice(0, -1); // Exclude the header row if any\n          setData(parsedData);\n        },\n        header: false\n      });\n    }\n  };\n  const updateChart = index => {\n    const rows = data.slice(index, index + 50);\n    const labels = Array.from({\n      length: rows[0].length - 1\n    }, (_, i) => `Column ${i + 1}`);\n    const datasets = rows.map((row, i) => ({\n      label: `Row ${index + i + 1}`,\n      data: row.slice(0, 52).map(Number),\n      // Parse as numbers\n      fill: false,\n      borderColor: `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.8)`\n    }));\n    setChartData({\n      labels,\n      datasets\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"CSV Graph Plotter\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".csv\",\n    onChange: handleFileUpload,\n    style: {\n      margin: \"10px 0\",\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), chartData.labels && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      width: \"80%\",\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })));\n};\nexport default graph;","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","graph","data","setData","currentIndex","setCurrentIndex","chartData","setChartData","length","interval","setInterval","updateChart","prevIndex","clearInterval","handleFileUpload","event","file","target","files","parse","complete","result","parsedData","slice","header","index","rows","labels","Array","from","_","i","datasets","map","row","label","Number","fill","borderColor","Math","random","createElement","style","textAlign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","margin","display","marginTop","width"],"sources":["C:/Users/Admin/OneDrive/Desktop/Intern/sensors1/src/graph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\"; // Automatically imports the required chart components\r\n\r\nconst graph = () => {\r\n  const [data, setData] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      const interval = setInterval(() => {\r\n        updateChart(currentIndex);\r\n        setCurrentIndex((prevIndex) => (prevIndex + 50) % data.length);\r\n      }, 1000); // Change every second\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [data, currentIndex]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      Papa.parse(file, {\r\n        complete: (result) => {\r\n          const parsedData = result.data.slice(0, -1); // Exclude the header row if any\r\n          setData(parsedData);\r\n        },\r\n        header: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateChart = (index) => {\r\n    const rows = data.slice(index, index + 50);\r\n    const labels = Array.from({ length: rows[0].length - 1 }, (_, i) => `Column ${i + 1}`);\r\n    const datasets = rows.map((row, i) => ({\r\n      label: `Row ${index + i + 1}`,\r\n      data: row.slice(0, 52).map(Number), // Parse as numbers\r\n      fill: false,\r\n      borderColor: `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.8)`,\r\n    }));\r\n\r\n    setChartData({ labels, datasets });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>CSV Graph Plotter</h1>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileUpload}\r\n        style={{ margin: \"10px 0\", display: \"block\" }}\r\n      />\r\n      {chartData.labels && (\r\n        <div style={{ marginTop: \"20px\", width: \"80%\", margin: \"auto\" }}>\r\n          <Line data={chartData} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}