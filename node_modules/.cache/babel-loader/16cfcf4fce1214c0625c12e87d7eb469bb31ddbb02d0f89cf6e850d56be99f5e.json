{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Intern\\\\sensors1\\\\src\\\\CsvGraphPlotter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport Papa from \"papaparse\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\n\n// Video Mapping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoMapping = {\n  0: {\n    name: \"Sit\",\n    path: \"/videos/sit.mp4\"\n  },\n  1: {\n    name: \"Forward Bend\",\n    path: \"/videos/forward_bend.mp4\"\n  },\n  2: {\n    name: \"Warrior Pose\",\n    path: \"/videos/warrior.mp4\"\n  },\n  3: {\n    name: \"Triangle Pose\",\n    path: \"/videos/triangle.mp4\"\n  },\n  4: {\n    name: \"Vajrasana\",\n    path: \"/videos/vajrasan.mp4\"\n  },\n  5: {\n    name: \"Backward Bend\",\n    path: \"/videos/backwardbend_pose.mp4\"\n  }\n};\n\n// Constants for graph display\nconst WINDOW_SIZE = 50; // Number of points to show at once\nconst UPDATE_INTERVAL = 100; // Update every 100ms for smoother animation\n\nconst CsvGraphPlotter = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [chartData, setChartData] = useState({\n    labels: Array(WINDOW_SIZE).fill(''),\n    datasets: Array(52).fill(null).map((_, idx) => ({\n      label: `Column ${idx + 1}`,\n      data: Array(WINDOW_SIZE).fill(0),\n      borderColor: `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.6)`,\n      borderWidth: 1,\n      fill: false,\n      tension: 0.4 // Add smooth curves to the lines\n    }))\n  });\n  const [currentActivity, setCurrentActivity] = useState(\"Unknown Activity\");\n  const [videoSrc, setVideoSrc] = useState(\"\");\n  const chartRef = useRef(null);\n  const updateChartAndVideo = useCallback(startIndex => {\n    if (startIndex >= data.length) {\n      setCurrentIndex(0); // Reset to beginning when reaching the end\n      return;\n    }\n    const row = data[startIndex];\n\n    // Update chart data with sliding window effect\n    setChartData(prevChartData => {\n      const newDatasets = prevChartData.datasets.map((dataset, colIdx) => ({\n        ...dataset,\n        data: [...dataset.data.slice(1),\n        // Remove oldest point\n        parseFloat(row[colIdx]) || 0 // Add new point\n        ]\n      }));\n      return {\n        labels: prevChartData.labels,\n        datasets: newDatasets\n      };\n    });\n\n    // Update video\n    const label = parseInt(row[52], 10);\n    if (videoMapping[label]) {\n      setCurrentActivity(videoMapping[label].name);\n      setVideoSrc(videoMapping[label].path);\n    } else {\n      setCurrentActivity(\"Unknown Activity\");\n      setVideoSrc(\"\");\n    }\n\n    // Force chart update\n    if (chartRef.current) {\n      chartRef.current.chart.update('none'); // Use 'none' mode for smoother updates\n    }\n  }, [data]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        complete: result => {\n          const parsedData = result.data.filter(row => row.length === 53);\n          setData(parsedData);\n          setCurrentIndex(0);\n        },\n        header: false,\n        skipEmptyLines: true\n      });\n    }\n  };\n  useEffect(() => {\n    if (data.length === 0) return;\n    const interval = setInterval(() => {\n      updateChartAndVideo(currentIndex);\n      setCurrentIndex(prevIndex => (prevIndex + 1) % data.length);\n    }, UPDATE_INTERVAL);\n    return () => clearInterval(interval);\n  }, [data, currentIndex, updateChartAndVideo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-time CSV Graph Plotter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      style: {\n        margin: \"20px\",\n        padding: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"45%\",\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          ref: chartRef,\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                display: true,\n                grid: {\n                  display: false\n                },\n                ticks: {\n                  display: false\n                }\n              },\n              y: {\n                display: true,\n                grid: {\n                  color: 'rgba(0,0,0,0.1)'\n                },\n                min: 0,\n                max: 20,\n                ticks: {\n                  stepSize: 2,\n                  callback: value => value.toFixed(1)\n                }\n              }\n            },\n            animation: {\n              duration: 0\n            },\n            plugins: {\n              legend: {\n                display: false\n              },\n              tooltip: {\n                enabled: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"45%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Current Activity: \", currentActivity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), videoSrc ? /*#__PURE__*/_jsxDEV(\"video\", {\n          width: \"100%\",\n          height: \"400\",\n          loop: true,\n          autoPlay: true,\n          muted: true,\n          controls: false,\n          style: {\n            objectFit: \"contain\",\n            pointerEvents: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: videoSrc,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), \"Your browser does not support the video tag.\"]\n        }, videoSrc, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No video available for the current activity.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(CsvGraphPlotter, \"zSTVjdNejStWmc0o5aL9iqDwOzg=\");\n_c = CsvGraphPlotter;\nexport default CsvGraphPlotter;\nvar _c;\n$RefreshReg$(_c, \"CsvGraphPlotter\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Papa","Line","jsxDEV","_jsxDEV","videoMapping","name","path","WINDOW_SIZE","UPDATE_INTERVAL","CsvGraphPlotter","_s","data","setData","currentIndex","setCurrentIndex","chartData","setChartData","labels","Array","fill","datasets","map","_","idx","label","borderColor","Math","random","borderWidth","tension","currentActivity","setCurrentActivity","videoSrc","setVideoSrc","chartRef","updateChartAndVideo","startIndex","length","row","prevChartData","newDatasets","dataset","colIdx","slice","parseFloat","parseInt","current","chart","update","handleFileUpload","event","file","target","files","parse","complete","result","parsedData","filter","header","skipEmptyLines","interval","setInterval","prevIndex","clearInterval","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","margin","display","justifyContent","width","height","ref","options","responsive","maintainAspectRatio","scales","x","grid","ticks","y","color","min","max","stepSize","callback","value","toFixed","animation","duration","plugins","legend","tooltip","enabled","loop","autoPlay","muted","controls","objectFit","pointerEvents","src","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/Intern/sensors1/src/CsvGraphPlotter.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\n\r\n// Video Mapping\r\nconst videoMapping = {\r\n  0: { name: \"Sit\", path: \"/videos/sit.mp4\" },\r\n  1: { name: \"Forward Bend\", path: \"/videos/forward_bend.mp4\" },\r\n  2: { name: \"Warrior Pose\", path: \"/videos/warrior.mp4\" },\r\n  3: { name: \"Triangle Pose\", path: \"/videos/triangle.mp4\" },\r\n  4: { name: \"Vajrasana\", path: \"/videos/vajrasan.mp4\" },\r\n  5: { name: \"Backward Bend\", path: \"/videos/backwardbend_pose.mp4\" },\r\n};\r\n\r\n// Constants for graph display\r\nconst WINDOW_SIZE = 50; // Number of points to show at once\r\nconst UPDATE_INTERVAL = 100; // Update every 100ms for smoother animation\r\n\r\nconst CsvGraphPlotter = () => {\r\n  const [data, setData] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [chartData, setChartData] = useState({\r\n    labels: Array(WINDOW_SIZE).fill(''),\r\n    datasets: Array(52).fill(null).map((_, idx) => ({\r\n      label: `Column ${idx + 1}`,\r\n      data: Array(WINDOW_SIZE).fill(0),\r\n      borderColor: `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.6)`,\r\n      borderWidth: 1,\r\n      fill: false,\r\n      tension: 0.4, // Add smooth curves to the lines\r\n    }))\r\n  });\r\n  const [currentActivity, setCurrentActivity] = useState(\"Unknown Activity\");\r\n  const [videoSrc, setVideoSrc] = useState(\"\");\r\n  const chartRef = useRef(null);\r\n\r\n  const updateChartAndVideo = useCallback((startIndex) => {\r\n    if (startIndex >= data.length) {\r\n      setCurrentIndex(0); // Reset to beginning when reaching the end\r\n      return;\r\n    }\r\n\r\n    const row = data[startIndex];\r\n\r\n    // Update chart data with sliding window effect\r\n    setChartData(prevChartData => {\r\n      const newDatasets = prevChartData.datasets.map((dataset, colIdx) => ({\r\n        ...dataset,\r\n        data: [\r\n          ...dataset.data.slice(1), // Remove oldest point\r\n          parseFloat(row[colIdx]) || 0 // Add new point\r\n        ]\r\n      }));\r\n\r\n      return {\r\n        labels: prevChartData.labels,\r\n        datasets: newDatasets\r\n      };\r\n    });\r\n\r\n    // Update video\r\n    const label = parseInt(row[52], 10);\r\n    if (videoMapping[label]) {\r\n      setCurrentActivity(videoMapping[label].name);\r\n      setVideoSrc(videoMapping[label].path);\r\n    } else {\r\n      setCurrentActivity(\"Unknown Activity\");\r\n      setVideoSrc(\"\");\r\n    }\r\n\r\n    // Force chart update\r\n    if (chartRef.current) {\r\n      chartRef.current.chart.update('none'); // Use 'none' mode for smoother updates\r\n    }\r\n  }, [data]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      Papa.parse(file, {\r\n        complete: (result) => {\r\n          const parsedData = result.data.filter((row) => row.length === 53);\r\n          setData(parsedData);\r\n          setCurrentIndex(0);\r\n        },\r\n        header: false,\r\n        skipEmptyLines: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length === 0) return;\r\n\r\n    const interval = setInterval(() => {\r\n      updateChartAndVideo(currentIndex);\r\n      setCurrentIndex(prevIndex => (prevIndex + 1) % data.length);\r\n    }, UPDATE_INTERVAL);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [data, currentIndex, updateChartAndVideo]);\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>Real-time CSV Graph Plotter</h1>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileUpload}\r\n        style={{ margin: \"20px\", padding: \"10px\" }}\r\n      />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\", padding: \"20px\" }}>\r\n        <div style={{ width: \"45%\", height: \"400px\" }}>\r\n          <Line\r\n            ref={chartRef}\r\n            data={chartData}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              scales: {\r\n                x: {\r\n                  display: true,\r\n                  grid: { display: false },\r\n                  ticks: { display: false }\r\n                },\r\n                y: {\r\n                  display: true,\r\n                  grid: { color: 'rgba(0,0,0,0.1)' },\r\n                  min: 0,\r\n                  max: 20,\r\n                  ticks: {\r\n                    stepSize: 2,\r\n                    callback: (value) => value.toFixed(1)\r\n                  }\r\n                }\r\n              },\r\n              animation: { duration: 0 },\r\n              plugins: {\r\n                legend: { display: false },\r\n                tooltip: { enabled: false }\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ width: \"45%\" }}>\r\n          <h1>Current Activity: {currentActivity}</h1>\r\n          {videoSrc ? (\r\n            <video\r\n              key={videoSrc}\r\n              width=\"100%\"\r\n              height=\"400\"\r\n              loop\r\n              autoPlay\r\n              muted\r\n              controls={false}\r\n              style={{\r\n                objectFit: \"contain\",\r\n                pointerEvents: \"none\",\r\n              }}\r\n            >\r\n              <source src={videoSrc} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          ) : (\r\n            <p>No video available for the current activity.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CsvGraphPlotter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}