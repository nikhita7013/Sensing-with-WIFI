{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Intern\\\\sensors1\\\\src\\\\CsvGraphPlotter.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid } from 'recharts';\nconst videoMapping = {\n  0: {\n    name: \"Sit\",\n    path: \"/videos/sit.mp4\"\n  },\n  1: {\n    name: \"Forward Bend\",\n    path: \"/videos/forward_bend.mp4\"\n  },\n  2: {\n    name: \"Warrior Pose\",\n    path: \"/videos/warrior.mp4\"\n  },\n  3: {\n    name: \"Triangle Pose\",\n    path: \"/videos/triangle.mp4\"\n  },\n  4: {\n    name: \"Vajrasana\",\n    path: \"/videos/vajrasan.mp4\"\n  },\n  5: {\n    name: \"Backward Bend\",\n    path: \"/videos/backwardbend_pose.mp4\"\n  }\n};\nconst WINDOW_SIZE = 50; // Number of points to show at once\nconst UPDATE_INTERVAL = 100; // Update every 100ms for smoother animation\n\nconst CsvGraphPlotter = () => {\n  const [data, setData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [visibleData, setVisibleData] = useState([]);\n  const [currentActivity, setCurrentActivity] = useState(\"Unknown Activity\");\n  const [videoSrc, setVideoSrc] = useState(\"\");\n  const parseCSV = content => {\n    const lines = content.split('\\n');\n    return lines.map(line => {\n      const values = line.split(',');\n      if (values.length === 53) {\n        const rowData = {\n          timestamp: Date.now()\n        };\n        // Convert first 52 columns to numerical data\n        for (let i = 0; i < 52; i++) {\n          rowData[`value${i}`] = parseFloat(values[i]) || 0;\n        }\n        rowData.activity = parseInt(values[52], 10);\n        return rowData;\n      }\n      return null;\n    }).filter(Boolean);\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const parsedData = parseCSV(e.target.result);\n        setData(parsedData);\n        setCurrentIndex(0);\n        setVisibleData(parsedData.slice(0, WINDOW_SIZE));\n      };\n      reader.readAsText(file);\n    }\n  };\n  const updateChartAndVideo = useCallback(() => {\n    if (data.length === 0) return;\n    const endIndex = currentIndex + WINDOW_SIZE;\n    const newVisibleData = data.slice(Math.max(0, currentIndex), Math.min(endIndex, data.length));\n    if (newVisibleData.length > 0) {\n      const currentRow = data[currentIndex];\n      const label = currentRow.activity;\n      if (videoMapping[label]) {\n        setCurrentActivity(videoMapping[label].name);\n        setVideoSrc(videoMapping[label].path);\n      } else {\n        setCurrentActivity(\"Unknown Activity\");\n        setVideoSrc(\"\");\n      }\n    }\n    setVisibleData(newVisibleData);\n  }, [data, currentIndex]);\n  useEffect(() => {\n    if (data.length === 0) return;\n    const interval = setInterval(() => {\n      setCurrentIndex(prevIndex => {\n        const nextIndex = prevIndex + 1;\n        return nextIndex >= data.length ? 0 : nextIndex;\n      });\n    }, UPDATE_INTERVAL);\n    return () => clearInterval(interval);\n  }, [data]);\n  useEffect(() => {\n    updateChartAndVideo();\n  }, [currentIndex, updateChartAndVideo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Real-time CSV Graph Plotter\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".csv\",\n    onChange: handleFileUpload,\n    className: \"mb-6 p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-around items-start gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 600,\n    height: 400,\n    data: visibleData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"timestamp\",\n    hide: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    domain: [0, 20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), Array.from({\n    length: 52\n  }, (_, i) => /*#__PURE__*/React.createElement(Line, {\n    key: `value${i}`,\n    type: \"monotone\",\n    dataKey: `value${i}`,\n    stroke: `hsl(${i * 7 % 360}, 70%, 50%)`,\n    dot: false,\n    isAnimationActive: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-semibold mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Current Activity: \", currentActivity), videoSrc ? /*#__PURE__*/React.createElement(\"video\", {\n    key: videoSrc,\n    className: \"w-full h-[400px] object-contain pointer-events-none\",\n    loop: true,\n    autoPlay: true,\n    muted: true,\n    controls: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: videoSrc,\n    type: \"video/mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }), \"Your browser does not support the video tag.\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"No video available for the current activity.\"))));\n};\nexport default CsvGraphPlotter;","map":{"version":3,"names":["React","useState","useEffect","useCallback","LineChart","Line","XAxis","YAxis","CartesianGrid","videoMapping","name","path","WINDOW_SIZE","UPDATE_INTERVAL","CsvGraphPlotter","data","setData","currentIndex","setCurrentIndex","visibleData","setVisibleData","currentActivity","setCurrentActivity","videoSrc","setVideoSrc","parseCSV","content","lines","split","map","line","values","length","rowData","timestamp","Date","now","i","parseFloat","activity","parseInt","filter","Boolean","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","parsedData","result","slice","readAsText","updateChartAndVideo","endIndex","newVisibleData","Math","max","min","currentRow","label","interval","setInterval","prevIndex","nextIndex","clearInterval","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","width","height","strokeDasharray","dataKey","hide","domain","Array","from","_","key","stroke","dot","isAnimationActive","loop","autoPlay","muted","controls","src"],"sources":["C:/Users/Admin/OneDrive/Desktop/Intern/sensors1/src/CsvGraphPlotter.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid } from 'recharts';\r\n\r\nconst videoMapping = {\r\n  0: { name: \"Sit\", path: \"/videos/sit.mp4\" },\r\n  1: { name: \"Forward Bend\", path: \"/videos/forward_bend.mp4\" },\r\n  2: { name: \"Warrior Pose\", path: \"/videos/warrior.mp4\" },\r\n  3: { name: \"Triangle Pose\", path: \"/videos/triangle.mp4\" },\r\n  4: { name: \"Vajrasana\", path: \"/videos/vajrasan.mp4\" },\r\n  5: { name: \"Backward Bend\", path: \"/videos/backwardbend_pose.mp4\" },\r\n};\r\n\r\nconst WINDOW_SIZE = 50; // Number of points to show at once\r\nconst UPDATE_INTERVAL = 100; // Update every 100ms for smoother animation\r\n\r\nconst CsvGraphPlotter = () => {\r\n  const [data, setData] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [visibleData, setVisibleData] = useState([]);\r\n  const [currentActivity, setCurrentActivity] = useState(\"Unknown Activity\");\r\n  const [videoSrc, setVideoSrc] = useState(\"\");\r\n\r\n  const parseCSV = (content) => {\r\n    const lines = content.split('\\n');\r\n    return lines.map(line => {\r\n      const values = line.split(',');\r\n      if (values.length === 53) {\r\n        const rowData = {\r\n          timestamp: Date.now(),\r\n        };\r\n        // Convert first 52 columns to numerical data\r\n        for (let i = 0; i < 52; i++) {\r\n          rowData[`value${i}`] = parseFloat(values[i]) || 0;\r\n        }\r\n        rowData.activity = parseInt(values[52], 10);\r\n        return rowData;\r\n      }\r\n      return null;\r\n    }).filter(Boolean);\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const parsedData = parseCSV(e.target.result);\r\n        setData(parsedData);\r\n        setCurrentIndex(0);\r\n        setVisibleData(parsedData.slice(0, WINDOW_SIZE));\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const updateChartAndVideo = useCallback(() => {\r\n    if (data.length === 0) return;\r\n\r\n    const endIndex = currentIndex + WINDOW_SIZE;\r\n    const newVisibleData = data.slice(\r\n      Math.max(0, currentIndex),\r\n      Math.min(endIndex, data.length)\r\n    );\r\n\r\n    if (newVisibleData.length > 0) {\r\n      const currentRow = data[currentIndex];\r\n      const label = currentRow.activity;\r\n      \r\n      if (videoMapping[label]) {\r\n        setCurrentActivity(videoMapping[label].name);\r\n        setVideoSrc(videoMapping[label].path);\r\n      } else {\r\n        setCurrentActivity(\"Unknown Activity\");\r\n        setVideoSrc(\"\");\r\n      }\r\n    }\r\n\r\n    setVisibleData(newVisibleData);\r\n  }, [data, currentIndex]);\r\n\r\n  useEffect(() => {\r\n    if (data.length === 0) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setCurrentIndex(prevIndex => {\r\n        const nextIndex = prevIndex + 1;\r\n        return nextIndex >= data.length ? 0 : nextIndex;\r\n      });\r\n    }, UPDATE_INTERVAL);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    updateChartAndVideo();\r\n  }, [currentIndex, updateChartAndVideo]);\r\n\r\n  return (\r\n    <div className=\"p-5 text-center\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Real-time CSV Graph Plotter</h1>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileUpload}\r\n        className=\"mb-6 p-2\"\r\n      />\r\n\r\n      <div className=\"flex justify-around items-start gap-4\">\r\n        <div className=\"w-1/2\">\r\n          <LineChart width={600} height={400} data={visibleData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"timestamp\" hide />\r\n            <YAxis domain={[0, 20]} />\r\n            {Array.from({ length: 52 }, (_, i) => (\r\n              <Line\r\n                key={`value${i}`}\r\n                type=\"monotone\"\r\n                dataKey={`value${i}`}\r\n                stroke={`hsl(${(i * 7) % 360}, 70%, 50%)`}\r\n                dot={false}\r\n                isAnimationActive={false}\r\n              />\r\n            ))}\r\n          </LineChart>\r\n        </div>\r\n\r\n        <div className=\"w-1/2\">\r\n          <h2 className=\"text-xl font-semibold mb-4\">Current Activity: {currentActivity}</h2>\r\n          {videoSrc ? (\r\n            <video\r\n              key={videoSrc}\r\n              className=\"w-full h-[400px] object-contain pointer-events-none\"\r\n              loop\r\n              autoPlay\r\n              muted\r\n              controls={false}\r\n            >\r\n              <source src={videoSrc} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          ) : (\r\n            <p>No video available for the current activity.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CsvGraphPlotter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}