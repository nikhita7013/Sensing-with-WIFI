{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Intern\\\\sensors1\\\\src\\\\CsvGraphPlotter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\n// import labelVideoMapping from \"./labelVideoMapping\"; \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoMapping = {\n  0: {\n    name: \"Sit\",\n    path: \"/videos/sit.mp4\"\n  },\n  1: {\n    name: \"Forward Bend\",\n    path: \"/videos/forward_bend.mp4\"\n  },\n  2: {\n    name: \"Warrior Pose\",\n    path: \"/videos/warrior.mp4\"\n  },\n  3: {\n    name: \"Triangle Pose\",\n    path: \"/videos/triangle.mp4\"\n  },\n  4: {\n    name: \"Vajrasana\",\n    path: \"/videos/vajrasan.mp4\"\n  },\n  5: {\n    name: \"Backward Bend\",\n    path: \"/videos/backwardbend_pose.mp4\"\n  }\n};\nconst CsvGraphPlotter = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [chartData, setChartData] = useState(null);\n  const [activity, setActivity] = useState(\"Unknown Activity\"); // Store current activity name\n  const [videoSrc, setVideoSrc] = useState(\"\"); // Store the current video source\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const interval = setInterval(() => {\n        updateChart(currentIndex);\n        setCurrentIndex(prevIndex => (prevIndex + 50) % data.length);\n      }, 1000); // Update every 1 second\n      return () => clearInterval(interval); // Clear interval when component unmounts\n    }\n  }, [data, currentIndex]);\n\n  // Handle CSV file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        complete: result => {\n          const parsedData = result.data.filter(row => row.length === 53);\n          console.log(\"Parsed Data:\", parsedData);\n          setData(parsedData);\n          updateChart(0); // Start charting with the first 50 rows\n        },\n        header: false,\n        skipEmptyLines: true\n      });\n    }\n  };\n  const updateChart = startIndex => {\n    const endIndex = startIndex + 50 > data.length ? data.length : startIndex + 50;\n    const rows = data.slice(startIndex, endIndex); // Get the next chunk of rows\n    const xLabels = rows.map((_, idx) => `t ${startIndex + idx + 1}`); // Labels for rows (x-axis)\n\n    console.log(\"Rows being processed:\", rows);\n\n    // Create datasets for each column from 0 to 51 (52 columns in total)\n    const datasets = Array.from({\n      length: 52\n    }, (_, colIdx) => {\n      const columnData = rows.map(row => parseFloat(row[colIdx]));\n      console.log(`Column ${colIdx + 1} data:`, columnData);\n      return {\n        label: `Column ${colIdx + 1}`,\n        // Label for each column (1 to 52)\n        data: columnData,\n        // Ensure that data for the column is properly included\n        borderColor: `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.6)`,\n        // Random colors for each column\n        borderWidth: 1,\n        fill: false\n      };\n    });\n    setChartData({\n      labels: xLabels,\n      // Set x-axis labels\n      datasets\n    });\n\n    // Access the 53rd column for the activity label (index 52)\n    const firstRow = rows[0];\n    if (firstRow && firstRow.length > 52) {\n      const label = parseInt(firstRow[52], 10); // 53rd column (index 52), ensure it's an integer\n\n      // Ensure the label is valid and exists in the mapping\n      if (label >= 0 && label <= 5 && labelVideoMapping[label]) {\n        const {\n          name,\n          video\n        } = labelVideoMapping[label]; // Get activity name and video path\n        setActivity(name);\n        setVideoSrc(video);\n        console.log(`Activity: ${name}, Video: ${video}`);\n      } else {\n        setActivity(\"Unknown Activity\");\n        setVideoSrc(\"\");\n        console.log(\"Unknown Activity or invalid label.\");\n      }\n    } else {\n      setActivity(\"Unknown Activity\");\n      setVideoSrc(\"\");\n      console.log(\"Label column not found.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CSV File Graph Plotter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileUpload,\n      style: {\n        margin: \"20px\",\n        padding: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"45%\"\n        },\n        children: chartData ? /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                title: {\n                  display: true,\n                  text: \"Rows\",\n                  font: {\n                    size: 14\n                  }\n                },\n                grid: {\n                  display: true\n                }\n              },\n              y: {\n                title: {\n                  display: true,\n                  text: \"Values\",\n                  font: {\n                    size: 14\n                  }\n                },\n                grid: {\n                  display: true\n                },\n                min: 0,\n                max: 20,\n                ticks: {\n                  stepSize: 2,\n                  // Step size to control spacing between ticks (optional)\n                  callback: value => value.toFixed(2) // Optionally format the y-axis tick labels\n                }\n              }\n            },\n            plugins: {\n              legend: {\n                display: false\n              },\n              tooltip: {\n                mode: \"index\",\n                intersect: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#888\"\n          },\n          children: \"Upload a CSV file to display the graph.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"45%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current Activity: \", activity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), videoSrc ? /*#__PURE__*/_jsxDEV(\"video\", {\n          width: \"100%\",\n          height: \"400\",\n          controls: true,\n          loop: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: videoSrc,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No video available for the current activity.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(CsvGraphPlotter, \"4tHry8851LzQ8VB8IcSEOGM6NaQ=\");\n_c = CsvGraphPlotter;\nexport default CsvGraphPlotter;\nvar _c;\n$RefreshReg$(_c, \"CsvGraphPlotter\");","map":{"version":3,"names":["React","useState","useEffect","Papa","Line","jsxDEV","_jsxDEV","videoMapping","name","path","CsvGraphPlotter","_s","data","setData","currentIndex","setCurrentIndex","chartData","setChartData","activity","setActivity","videoSrc","setVideoSrc","length","interval","setInterval","updateChart","prevIndex","clearInterval","handleFileUpload","event","file","target","files","parse","complete","result","parsedData","filter","row","console","log","header","skipEmptyLines","startIndex","endIndex","rows","slice","xLabels","map","_","idx","datasets","Array","from","colIdx","columnData","parseFloat","label","borderColor","Math","random","borderWidth","fill","labels","firstRow","parseInt","labelVideoMapping","video","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","margin","display","justifyContent","width","options","responsive","maintainAspectRatio","scales","x","title","text","font","size","grid","y","min","max","ticks","stepSize","callback","value","toFixed","plugins","legend","tooltip","mode","intersect","color","height","controls","loop","src","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/Intern/sensors1/src/CsvGraphPlotter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\n// import labelVideoMapping from \"./labelVideoMapping\"; \r\n\r\n\r\n\r\nconst videoMapping = {\r\n    0: { name: \"Sit\", path: \"/videos/sit.mp4\" },\r\n    1: { name: \"Forward Bend\", path: \"/videos/forward_bend.mp4\" },\r\n    2: { name: \"Warrior Pose\", path: \"/videos/warrior.mp4\" },\r\n    3: { name: \"Triangle Pose\", path: \"/videos/triangle.mp4\" },\r\n    4: { name: \"Vajrasana\", path: \"/videos/vajrasan.mp4\" },\r\n    5: { name: \"Backward Bend\", path: \"/videos/backwardbend_pose.mp4\" },\r\n  };\r\n\r\nconst CsvGraphPlotter = () => {\r\n  const [data, setData] = useState([]); \r\n  const [currentIndex, setCurrentIndex] = useState(0); \r\n  const [chartData, setChartData] = useState(null);\r\n  const [activity, setActivity] = useState(\"Unknown Activity\"); // Store current activity name\r\n  const [videoSrc, setVideoSrc] = useState(\"\"); // Store the current video source\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0) {\r\n      const interval = setInterval(() => {\r\n        updateChart(currentIndex);\r\n        setCurrentIndex((prevIndex) => (prevIndex + 50) % data.length);\r\n      }, 1000); // Update every 1 second\r\n      return () => clearInterval(interval); // Clear interval when component unmounts\r\n    }\r\n  }, [data, currentIndex]);\r\n\r\n  // Handle CSV file upload\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      Papa.parse(file, {\r\n        complete: (result) => {\r\n          const parsedData = result.data.filter((row) => row.length === 53); \r\n          console.log(\"Parsed Data:\", parsedData); \r\n          setData(parsedData); \r\n          updateChart(0); // Start charting with the first 50 rows\r\n        },\r\n        header: false,\r\n        skipEmptyLines: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  \r\n  const updateChart = (startIndex) => {\r\n    const endIndex = startIndex + 50 > data.length ? data.length : startIndex + 50;\r\n    const rows = data.slice(startIndex, endIndex); // Get the next chunk of rows\r\n    const xLabels = rows.map((_, idx) => `t ${startIndex + idx + 1}`); // Labels for rows (x-axis)\r\n  \r\n    \r\n    console.log(\"Rows being processed:\", rows);\r\n  \r\n    // Create datasets for each column from 0 to 51 (52 columns in total)\r\n    const datasets = Array.from({ length: 52 }, (_, colIdx) => {\r\n      const columnData = rows.map((row) => parseFloat(row[colIdx])); \r\n      console.log(`Column ${colIdx + 1} data:`, columnData);\r\n  \r\n      return {\r\n        label: `Column ${colIdx + 1}`, // Label for each column (1 to 52)\r\n        data: columnData, // Ensure that data for the column is properly included\r\n        borderColor: `rgba(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255}, 0.6)`, // Random colors for each column\r\n        borderWidth: 1,\r\n        fill: false,\r\n      };\r\n    });\r\n  \r\n    setChartData({\r\n      labels: xLabels, // Set x-axis labels\r\n      datasets,\r\n    });\r\n  \r\n    // Access the 53rd column for the activity label (index 52)\r\n    const firstRow = rows[0];\r\n    if (firstRow && firstRow.length > 52) {\r\n      const label = parseInt(firstRow[52], 10); // 53rd column (index 52), ensure it's an integer\r\n  \r\n      // Ensure the label is valid and exists in the mapping\r\n      if (label >= 0 && label <= 5 && labelVideoMapping[label]) {\r\n        const { name, video } = labelVideoMapping[label];  // Get activity name and video path\r\n        setActivity(name); \r\n        setVideoSrc(video);\r\n        console.log(`Activity: ${name}, Video: ${video}`); \r\n      } else {\r\n        setActivity(\"Unknown Activity\");\r\n        setVideoSrc(\"\"); \r\n        console.log(\"Unknown Activity or invalid label.\");\r\n      }\r\n    } else {\r\n      setActivity(\"Unknown Activity\");\r\n      setVideoSrc(\"\"); \r\n      console.log(\"Label column not found.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>CSV File Graph Plotter</h1>\r\n      {/* File Upload */}\r\n      <input\r\n        type=\"file\"\r\n        accept=\".csv\"\r\n        onChange={handleFileUpload}\r\n        style={{ margin: \"20px\", padding: \"10px\" }}\r\n      />\r\n\r\n      {/* Split View: Graph and Video */}\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\", padding: \"20px\" }}>\r\n        {/* Graph Section */}\r\n        <div style={{ width: \"45%\" }}>\r\n          {chartData ? (\r\n            <Line\r\n            data={chartData}\r\n            options={{\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n              scales: {\r\n                x: {\r\n                  title: { display: true, text: \"Rows\", font: { size: 14 } },\r\n                  grid: { display: true },\r\n                },\r\n                y: {\r\n                  title: { display: true, text: \"Values\", font: { size: 14 } },\r\n                  grid: { display: true },\r\n                  min: 0,\r\n                  max: 20, \r\n                  ticks: {\r\n                    stepSize: 2, // Step size to control spacing between ticks (optional)\r\n                    callback: (value) => value.toFixed(2), // Optionally format the y-axis tick labels\r\n                  },\r\n                },\r\n              },\r\n              plugins: {\r\n                legend: { display: false }, \r\n                tooltip: { mode: \"index\", intersect: false },\r\n              },\r\n            }}\r\n          />\r\n          \r\n          ) : (\r\n            <p style={{ color: \"#888\" }}>Upload a CSV file to display the graph.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Video Section */}\r\n        <div style={{ width: \"45%\" }}>\r\n          <h2>Current Activity: {activity}</h2>\r\n          {videoSrc ? (\r\n            <video width=\"100%\" height=\"400\" controls loop>\r\n              <source src={videoSrc} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          ) : (\r\n            <p>No video available for the current activity.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CsvGraphPlotter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}