{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\Intern\\\\sensors1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Graph from \"./components/Graph\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [poseLabel, setPoseLabel] = useState(0);\n  const [rowIndex, setRowIndex] = useState(0);\n  const readCSV = () => {\n    Papa.parse(\"/path-to-your-file.csv\", {\n      download: true,\n      complete: result => {\n        setData(result.data);\n      }\n    });\n  };\n  useEffect(() => {\n    readCSV();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (rowIndex + 9 < data.length) {\n        const subset = data.slice(rowIndex, rowIndex + 10);\n        setPoseLabel(subset[9][52]); // Update pose label from the last column\n        setRowIndex(rowIndex + 10);\n      } else {\n        setRowIndex(0); // Reset to the beginning when done\n      }\n    }, 5000); // Update every 5 seconds (or customize based on needs)\n\n    return () => clearInterval(interval);\n  }, [rowIndex, data]);\n  const currentData = data.slice(rowIndex, rowIndex + 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sensorless Sensing \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Graph of Amplitude Values (10 rows)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        data: currentData.map(row => row.slice(0, 52))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Yoga Pose: \", [\"Sit\", \"Forward Bend\", \"Warrior Pose\", \"Triangle Pose\", \"Vajrasan\", \"Backward Bend\"][poseLabel]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n        poseLabel: poseLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rLbe91MfaqbUCVmyTb0QRM0dnaU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Papa","Graph","VideoPlayer","jsxDEV","_jsxDEV","App","_s","data","setData","poseLabel","setPoseLabel","rowIndex","setRowIndex","readCSV","parse","download","complete","result","interval","setInterval","length","subset","slice","clearInterval","currentData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Desktop/Intern/sensors1/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Papa from \"papaparse\";\nimport Graph from \"./components/Graph\";\nimport VideoPlayer from \"./components/VideoPlayer\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [poseLabel, setPoseLabel] = useState(0);\n  const [rowIndex, setRowIndex] = useState(0);\n\n  const readCSV = () => {\n    Papa.parse(\"/path-to-your-file.csv\", {\n      download: true,\n      complete: (result) => {\n        setData(result.data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    readCSV();\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (rowIndex + 9 < data.length) {\n        const subset = data.slice(rowIndex, rowIndex + 10);\n        setPoseLabel(subset[9][52]); // Update pose label from the last column\n        setRowIndex(rowIndex + 10);\n      } else {\n        setRowIndex(0); // Reset to the beginning when done\n      }\n    }, 5000); // Update every 5 seconds (or customize based on needs)\n    \n    return () => clearInterval(interval);\n  }, [rowIndex, data]);\n\n  const currentData = data.slice(rowIndex, rowIndex + 10);\n\n  return (\n    <div className=\"App\">\n      <h1>Sensorless Sensing </h1>\n\n      <div className=\"graph\">\n        <h2>Graph of Amplitude Values (10 rows)</h2>\n        <Graph data={currentData.map(row => row.slice(0, 52))} />\n      </div>\n\n      <div className=\"video-player\">\n        <h2>Yoga Pose: {[\"Sit\", \"Forward Bend\", \"Warrior Pose\", \"Triangle Pose\", \"Vajrasan\", \"Backward Bend\"][poseLabel]}</h2>\n        <VideoPlayer poseLabel={poseLabel} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}